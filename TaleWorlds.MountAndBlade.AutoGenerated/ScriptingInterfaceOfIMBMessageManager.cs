// Decompiled with JetBrains decompiler
// Type: ManagedCallbacks.ScriptingInterfaceOfIMBMessageManager
// Assembly: TaleWorlds.MountAndBlade.AutoGenerated, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D02C25D1-9727-49C6-A24A-EE3800F0364C
// Assembly location: E:\SteamLibrary\steamapps\common\Mount & Blade II Bannerlord\bin\Win64_Shipping_Client\TaleWorlds.MountAndBlade.AutoGenerated.dll

using System.Runtime.InteropServices;
using System.Security;
using System.Text;
using TaleWorlds.DotNet;
using TaleWorlds.Engine;
using TaleWorlds.MountAndBlade;

namespace ManagedCallbacks
{
  internal class ScriptingInterfaceOfIMBMessageManager : IMBMessageManager
  {
    private static readonly Encoding _utf8 = Encoding.UTF8;
    public static ScriptingInterfaceOfIMBMessageManager.DisplayMessageDelegate call_DisplayMessageDelegate;
    public static ScriptingInterfaceOfIMBMessageManager.DisplayMessageWithColorDelegate call_DisplayMessageWithColorDelegate;
    public static ScriptingInterfaceOfIMBMessageManager.SetMessageManagerDelegate call_SetMessageManagerDelegate;

    public void DisplayMessage(string message)
    {
      byte[] numArray = (byte[]) null;
      if (message != null)
      {
        numArray = CallbackStringBufferManager.StringBuffer0;
        int bytes = ScriptingInterfaceOfIMBMessageManager._utf8.GetBytes(message, 0, message.Length, numArray, 0);
        numArray[bytes] = (byte) 0;
      }
      ScriptingInterfaceOfIMBMessageManager.call_DisplayMessageDelegate(numArray);
    }

    public void DisplayMessageWithColor(string message, uint color)
    {
      byte[] numArray = (byte[]) null;
      if (message != null)
      {
        numArray = CallbackStringBufferManager.StringBuffer0;
        int bytes = ScriptingInterfaceOfIMBMessageManager._utf8.GetBytes(message, 0, message.Length, numArray, 0);
        numArray[bytes] = (byte) 0;
      }
      ScriptingInterfaceOfIMBMessageManager.call_DisplayMessageWithColorDelegate(numArray, color);
    }

    public void SetMessageManager(MessageManagerBase messageManager) => ScriptingInterfaceOfIMBMessageManager.call_SetMessageManagerDelegate(messageManager != null ? messageManager.GetManagedId() : 0);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void DisplayMessageDelegate(byte[] message);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void DisplayMessageWithColorDelegate(byte[] message, uint color);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void SetMessageManagerDelegate(int messageManager);
  }
}
