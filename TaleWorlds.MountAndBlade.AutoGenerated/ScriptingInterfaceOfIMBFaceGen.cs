// Decompiled with JetBrains decompiler
// Type: ManagedCallbacks.ScriptingInterfaceOfIMBFaceGen
// Assembly: TaleWorlds.MountAndBlade.AutoGenerated, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D02C25D1-9727-49C6-A24A-EE3800F0364C
// Assembly location: E:\SteamLibrary\steamapps\common\Mount & Blade II Bannerlord\bin\Win64_Shipping_Client\TaleWorlds.MountAndBlade.AutoGenerated.dll

using System;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;
using TaleWorlds.Core;
using TaleWorlds.DotNet;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade;

namespace ManagedCallbacks
{
  internal class ScriptingInterfaceOfIMBFaceGen : IMBFaceGen
  {
    private static readonly Encoding _utf8 = Encoding.UTF8;
    public static ScriptingInterfaceOfIMBFaceGen.GetNumEditableDeformKeysDelegate call_GetNumEditableDeformKeysDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetParamsFromKeyDelegate call_GetParamsFromKeyDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetParamsMaxDelegate call_GetParamsMaxDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetZeroProbabilitiesDelegate call_GetZeroProbabilitiesDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.ProduceNumericKeyWithParamsDelegate call_ProduceNumericKeyWithParamsDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.ProduceNumericKeyWithDefaultValuesDelegate call_ProduceNumericKeyWithDefaultValuesDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetRandomBodyPropertiesDelegate call_GetRandomBodyPropertiesDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.EnforceConstraintsDelegate call_EnforceConstraintsDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetDeformKeyDataDelegate call_GetDeformKeyDataDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetFaceGenInstancesLengthDelegate call_GetFaceGenInstancesLengthDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetScaleFromKeyDelegate call_GetScaleFromKeyDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetVoiceRecordsCountDelegate call_GetVoiceRecordsCountDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetHairColorCountDelegate call_GetHairColorCountDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetHairColorGradientPointsDelegate call_GetHairColorGradientPointsDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetTatooColorCountDelegate call_GetTatooColorCountDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetTatooColorGradientPointsDelegate call_GetTatooColorGradientPointsDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetSkinColorCountDelegate call_GetSkinColorCountDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetMaturityTypeDelegate call_GetMaturityTypeDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetVoiceTypeUsableForPlayerDataDelegate call_GetVoiceTypeUsableForPlayerDataDelegate;
    public static ScriptingInterfaceOfIMBFaceGen.GetSkinColorGradientPointsDelegate call_GetSkinColorGradientPointsDelegate;

    public int GetNumEditableDeformKeys(bool initialGender, float age) => ScriptingInterfaceOfIMBFaceGen.call_GetNumEditableDeformKeysDelegate(initialGender, age);

    public void GetParamsFromKey(
      ref FaceGenerationParams faceGenerationParams,
      ref BodyProperties bodyProperties,
      bool earsAreHidden)
    {
      ScriptingInterfaceOfIMBFaceGen.call_GetParamsFromKeyDelegate(ref faceGenerationParams, ref bodyProperties, earsAreHidden);
    }

    public void GetParamsMax(
      int curGender,
      float curAge,
      ref int hairNum,
      ref int beardNum,
      ref int faceTextureNum,
      ref int mouthTextureNum,
      ref int faceTattooNum,
      ref int soundNum,
      ref int eyebrowNum,
      ref float scale)
    {
      ScriptingInterfaceOfIMBFaceGen.call_GetParamsMaxDelegate(curGender, curAge, ref hairNum, ref beardNum, ref faceTextureNum, ref mouthTextureNum, ref faceTattooNum, ref soundNum, ref eyebrowNum, ref scale);
    }

    public void GetZeroProbabilities(int curGender, float curAge, ref float tattooZeroProbability) => ScriptingInterfaceOfIMBFaceGen.call_GetZeroProbabilitiesDelegate(curGender, curAge, ref tattooZeroProbability);

    public void ProduceNumericKeyWithParams(
      ref FaceGenerationParams faceGenerationParams,
      bool earsAreHidden,
      ref BodyProperties bodyProperties)
    {
      ScriptingInterfaceOfIMBFaceGen.call_ProduceNumericKeyWithParamsDelegate(ref faceGenerationParams, earsAreHidden, ref bodyProperties);
    }

    public void ProduceNumericKeyWithDefaultValues(
      ref BodyProperties initialBodyProperties,
      bool earsAreHidden,
      int gender,
      float age)
    {
      ScriptingInterfaceOfIMBFaceGen.call_ProduceNumericKeyWithDefaultValuesDelegate(ref initialBodyProperties, earsAreHidden, gender, age);
    }

    public void GetRandomBodyProperties(
      int gender,
      ref BodyProperties bodyPropertiesMin,
      ref BodyProperties bodyPropertiesMax,
      int hairCoverType,
      int seed,
      string hairTags,
      string beardTags,
      string tatooTags,
      ref BodyProperties outBodyProperties)
    {
      byte[] numArray1 = (byte[]) null;
      if (hairTags != null)
      {
        numArray1 = CallbackStringBufferManager.StringBuffer0;
        int bytes = ScriptingInterfaceOfIMBFaceGen._utf8.GetBytes(hairTags, 0, hairTags.Length, numArray1, 0);
        numArray1[bytes] = (byte) 0;
      }
      byte[] numArray2 = (byte[]) null;
      if (beardTags != null)
      {
        numArray2 = CallbackStringBufferManager.StringBuffer1;
        int bytes = ScriptingInterfaceOfIMBFaceGen._utf8.GetBytes(beardTags, 0, beardTags.Length, numArray2, 0);
        numArray2[bytes] = (byte) 0;
      }
      byte[] numArray3 = (byte[]) null;
      if (tatooTags != null)
      {
        numArray3 = CallbackStringBufferManager.StringBuffer2;
        int bytes = ScriptingInterfaceOfIMBFaceGen._utf8.GetBytes(tatooTags, 0, tatooTags.Length, numArray3, 0);
        numArray3[bytes] = (byte) 0;
      }
      ScriptingInterfaceOfIMBFaceGen.call_GetRandomBodyPropertiesDelegate(gender, ref bodyPropertiesMin, ref bodyPropertiesMax, hairCoverType, seed, numArray1, numArray2, numArray3, ref outBodyProperties);
    }

    public bool EnforceConstraints(ref FaceGenerationParams faceGenerationParams) => ScriptingInterfaceOfIMBFaceGen.call_EnforceConstraintsDelegate(ref faceGenerationParams);

    public void GetDeformKeyData(
      int keyNo,
      ref DeformKeyData deformKeyData,
      int gender,
      float age)
    {
      ScriptingInterfaceOfIMBFaceGen.call_GetDeformKeyDataDelegate(keyNo, ref deformKeyData, gender, age);
    }

    public int GetFaceGenInstancesLength(int gender, float age) => ScriptingInterfaceOfIMBFaceGen.call_GetFaceGenInstancesLengthDelegate(gender, age);

    public float GetScaleFromKey(int gender, ref BodyProperties initialBodyProperties) => ScriptingInterfaceOfIMBFaceGen.call_GetScaleFromKeyDelegate(gender, ref initialBodyProperties);

    public int GetVoiceRecordsCount(int curGender, float age) => ScriptingInterfaceOfIMBFaceGen.call_GetVoiceRecordsCountDelegate(curGender, age);

    public int GetHairColorCount(int curGender, float age) => ScriptingInterfaceOfIMBFaceGen.call_GetHairColorCountDelegate(curGender, age);

    public void GetHairColorGradientPoints(int curGender, float age, Vec3[] colors)
    {
      PinnedArrayData<Vec3> pinnedArrayData = new PinnedArrayData<Vec3>(colors);
      IntPtr pointer = pinnedArrayData.Pointer;
      ScriptingInterfaceOfIMBFaceGen.call_GetHairColorGradientPointsDelegate(curGender, age, pointer);
      pinnedArrayData.Dispose();
    }

    public int GetTatooColorCount(int curGender, float age) => ScriptingInterfaceOfIMBFaceGen.call_GetTatooColorCountDelegate(curGender, age);

    public void GetTatooColorGradientPoints(int curGender, float age, Vec3[] colors)
    {
      PinnedArrayData<Vec3> pinnedArrayData = new PinnedArrayData<Vec3>(colors);
      IntPtr pointer = pinnedArrayData.Pointer;
      ScriptingInterfaceOfIMBFaceGen.call_GetTatooColorGradientPointsDelegate(curGender, age, pointer);
      pinnedArrayData.Dispose();
    }

    public int GetSkinColorCount(int curGender, float age) => ScriptingInterfaceOfIMBFaceGen.call_GetSkinColorCountDelegate(curGender, age);

    public int GetMaturityType(float age) => ScriptingInterfaceOfIMBFaceGen.call_GetMaturityTypeDelegate(age);

    public void GetVoiceTypeUsableForPlayerData(int curGender, float age, bool[] aiArray)
    {
      PinnedArrayData<bool> pinnedArrayData = new PinnedArrayData<bool>(aiArray);
      IntPtr pointer = pinnedArrayData.Pointer;
      ScriptingInterfaceOfIMBFaceGen.call_GetVoiceTypeUsableForPlayerDataDelegate(curGender, age, pointer);
      pinnedArrayData.Dispose();
    }

    public void GetSkinColorGradientPoints(int curGender, float age, Vec3[] colors)
    {
      PinnedArrayData<Vec3> pinnedArrayData = new PinnedArrayData<Vec3>(colors);
      IntPtr pointer = pinnedArrayData.Pointer;
      ScriptingInterfaceOfIMBFaceGen.call_GetSkinColorGradientPointsDelegate(curGender, age, pointer);
      pinnedArrayData.Dispose();
    }

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate int GetNumEditableDeformKeysDelegate([MarshalAs(UnmanagedType.U1)] bool initialGender, float age);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void GetParamsFromKeyDelegate(
      ref FaceGenerationParams faceGenerationParams,
      ref BodyProperties bodyProperties,
      [MarshalAs(UnmanagedType.U1)] bool earsAreHidden);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void GetParamsMaxDelegate(
      int curGender,
      float curAge,
      ref int hairNum,
      ref int beardNum,
      ref int faceTextureNum,
      ref int mouthTextureNum,
      ref int faceTattooNum,
      ref int soundNum,
      ref int eyebrowNum,
      ref float scale);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void GetZeroProbabilitiesDelegate(
      int curGender,
      float curAge,
      ref float tattooZeroProbability);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void ProduceNumericKeyWithParamsDelegate(
      ref FaceGenerationParams faceGenerationParams,
      [MarshalAs(UnmanagedType.U1)] bool earsAreHidden,
      ref BodyProperties bodyProperties);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void ProduceNumericKeyWithDefaultValuesDelegate(
      ref BodyProperties initialBodyProperties,
      [MarshalAs(UnmanagedType.U1)] bool earsAreHidden,
      int gender,
      float age);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void GetRandomBodyPropertiesDelegate(
      int gender,
      ref BodyProperties bodyPropertiesMin,
      ref BodyProperties bodyPropertiesMax,
      int hairCoverType,
      int seed,
      byte[] hairTags,
      byte[] beardTags,
      byte[] tatooTags,
      ref BodyProperties outBodyProperties);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    [return: MarshalAs(UnmanagedType.U1)]
    public delegate bool EnforceConstraintsDelegate(ref FaceGenerationParams faceGenerationParams);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void GetDeformKeyDataDelegate(
      int keyNo,
      ref DeformKeyData deformKeyData,
      int gender,
      float age);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate int GetFaceGenInstancesLengthDelegate(int gender, float age);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate float GetScaleFromKeyDelegate(
      int gender,
      ref BodyProperties initialBodyProperties);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate int GetVoiceRecordsCountDelegate(int curGender, float age);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate int GetHairColorCountDelegate(int curGender, float age);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void GetHairColorGradientPointsDelegate(
      int curGender,
      float age,
      IntPtr colors);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate int GetTatooColorCountDelegate(int curGender, float age);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void GetTatooColorGradientPointsDelegate(
      int curGender,
      float age,
      IntPtr colors);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate int GetSkinColorCountDelegate(int curGender, float age);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate int GetMaturityTypeDelegate(float age);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void GetVoiceTypeUsableForPlayerDataDelegate(
      int curGender,
      float age,
      IntPtr aiArray);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void GetSkinColorGradientPointsDelegate(
      int curGender,
      float age,
      IntPtr colors);
  }
}
