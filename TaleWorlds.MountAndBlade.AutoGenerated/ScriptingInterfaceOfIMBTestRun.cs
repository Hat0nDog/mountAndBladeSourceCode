// Decompiled with JetBrains decompiler
// Type: ManagedCallbacks.ScriptingInterfaceOfIMBTestRun
// Assembly: TaleWorlds.MountAndBlade.AutoGenerated, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D02C25D1-9727-49C6-A24A-EE3800F0364C
// Assembly location: E:\SteamLibrary\steamapps\common\Mount & Blade II Bannerlord\bin\Win64_Shipping_Client\TaleWorlds.MountAndBlade.AutoGenerated.dll

using System.Runtime.InteropServices;
using System.Security;
using System.Text;
using TaleWorlds.DotNet;
using TaleWorlds.MountAndBlade;

namespace ManagedCallbacks
{
  internal class ScriptingInterfaceOfIMBTestRun : IMBTestRun
  {
    private static readonly Encoding _utf8 = Encoding.UTF8;
    public static ScriptingInterfaceOfIMBTestRun.AutoContinueDelegate call_AutoContinueDelegate;
    public static ScriptingInterfaceOfIMBTestRun.GetFPSDelegate call_GetFPSDelegate;
    public static ScriptingInterfaceOfIMBTestRun.EnterEditModeDelegate call_EnterEditModeDelegate;
    public static ScriptingInterfaceOfIMBTestRun.OpenSceneDelegate call_OpenSceneDelegate;
    public static ScriptingInterfaceOfIMBTestRun.CloseSceneDelegate call_CloseSceneDelegate;
    public static ScriptingInterfaceOfIMBTestRun.LeaveEditModeDelegate call_LeaveEditModeDelegate;
    public static ScriptingInterfaceOfIMBTestRun.NewSceneDelegate call_NewSceneDelegate;
    public static ScriptingInterfaceOfIMBTestRun.StartMissionDelegate call_StartMissionDelegate;

    public int AutoContinue(int type) => ScriptingInterfaceOfIMBTestRun.call_AutoContinueDelegate(type);

    public int GetFPS() => ScriptingInterfaceOfIMBTestRun.call_GetFPSDelegate();

    public bool EnterEditMode() => ScriptingInterfaceOfIMBTestRun.call_EnterEditModeDelegate();

    public bool OpenScene(string sceneName)
    {
      byte[] numArray = (byte[]) null;
      if (sceneName != null)
      {
        numArray = CallbackStringBufferManager.StringBuffer0;
        int bytes = ScriptingInterfaceOfIMBTestRun._utf8.GetBytes(sceneName, 0, sceneName.Length, numArray, 0);
        numArray[bytes] = (byte) 0;
      }
      return ScriptingInterfaceOfIMBTestRun.call_OpenSceneDelegate(numArray);
    }

    public bool CloseScene() => ScriptingInterfaceOfIMBTestRun.call_CloseSceneDelegate();

    public bool LeaveEditMode() => ScriptingInterfaceOfIMBTestRun.call_LeaveEditModeDelegate();

    public bool NewScene() => ScriptingInterfaceOfIMBTestRun.call_NewSceneDelegate();

    public void StartMission() => ScriptingInterfaceOfIMBTestRun.call_StartMissionDelegate();

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate int AutoContinueDelegate(int type);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate int GetFPSDelegate();

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    [return: MarshalAs(UnmanagedType.U1)]
    public delegate bool EnterEditModeDelegate();

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    [return: MarshalAs(UnmanagedType.U1)]
    public delegate bool OpenSceneDelegate(byte[] sceneName);

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    [return: MarshalAs(UnmanagedType.U1)]
    public delegate bool CloseSceneDelegate();

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    [return: MarshalAs(UnmanagedType.U1)]
    public delegate bool LeaveEditModeDelegate();

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    [return: MarshalAs(UnmanagedType.U1)]
    public delegate bool NewSceneDelegate();

    [UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]
    [SuppressUnmanagedCodeSecurity]
    [MonoNativeFunctionWrapper]
    public delegate void StartMissionDelegate();
  }
}
