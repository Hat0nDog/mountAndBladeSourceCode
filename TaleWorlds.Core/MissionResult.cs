// Decompiled with JetBrains decompiler
// Type: TaleWorlds.Core.MissionResult
// Assembly: TaleWorlds.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 43F7B45C-9AE1-4715-A37B-2364840F62AF
// Assembly location: E:\SteamLibrary\steamapps\common\Mount & Blade II Bannerlord\bin\Win64_Shipping_Client\TaleWorlds.Core.dll

using System.Collections.Generic;

namespace TaleWorlds.Core
{
  public class MissionResult
  {
    internal static void AutoGeneratedStaticCollectObjectsMissionResult(
      object o,
      List<object> collectedObjects)
    {
      ((MissionResult) o).AutoGeneratedInstanceCollectObjects(collectedObjects);
    }

    protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
    {
    }

    public BattleState BattleState { get; private set; }

    public bool BattleResolved => this.PlayerVictory || this.PlayerDefeated;

    public bool PlayerVictory { get; private set; }

    public bool PlayerDefeated { get; private set; }

    public MissionResult(BattleState battleState, bool playerVictory)
    {
      this.BattleState = battleState;
      this.PlayerVictory = playerVictory;
      this.PlayerDefeated = !playerVictory;
    }

    public MissionResult()
    {
      this.PlayerVictory = false;
      this.PlayerDefeated = false;
    }

    public static MissionResult CreateSuccessful(IMission mission) => new MissionResult(mission.PlayerTeam.Side == BattleSideEnum.Attacker ? BattleState.AttackerVictory : BattleState.DefenderVictory, true);

    public static MissionResult CreateDefeated(IMission mission) => new MissionResult(mission.PlayerTeam.Side == BattleSideEnum.Attacker ? BattleState.DefenderVictory : BattleState.AttackerVictory, false);
  }
}
